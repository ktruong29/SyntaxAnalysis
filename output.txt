Token: Keyword	Lexeme: int
<Statement> -> <Declarative>
<Type> -> bool | float | int | double | string | char
Token: Identifier	Lexeme: a
DPrime -> epsilon.
Token: Separator	Lexeme: ;
It's a declarative statement

Token: Identifier	Lexeme: double
<Statement> -> <Declarative>
<Type> -> bool | float | int | double | string | char
Token: Identifier	Lexeme: b
Token: Separator	Lexeme: ,
<D_Prime> -> <,> <I> <D_Prime> | epsilon
Token: Identifier	Lexeme: c
Token: Separator	Lexeme: ,
<D_Prime> -> <,> <I> <D_Prime> | epsilon
Token: Identifier	Lexeme: d
DPrime -> epsilon.
Token: Separator	Lexeme: ;
It's a declarative statement

SYMBOL TABLE
Identifier   Memory Location     Type      
a            5000                int       
b            5001                double    
c            5002                double    
d            5003                double    
